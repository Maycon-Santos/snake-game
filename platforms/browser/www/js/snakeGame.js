"use strict";function Engine(o){var e=this,a=o.ctx.canvas,s=[],l=function(e){for(var t=arguments.length,r=Array(1<t?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];for(var n=s.length;n--;){var o;"function"==typeof s[n][e]&&(o=s[n])[e].apply(o,r)}};this.run=function(){var i=e,n=performance.now();requestAnimationFrame(function e(t){var r=(t-n)/1e3;if(r=Math.min(1,r),l("update",r),o.ctx.clearRect(0,0,a.width,a.height),l("draw"),1<=r)return i.run();requestAnimationFrame(e)}.bind(e))},this.add=function(e){return s.push(e)}}function Food(e){var t,r=this,i=[];for(var n in this.position=[],gameProps.foods.types)for(var o=gameProps.foods.types[n],a=o.chance,s=0;s<a;s++)i.push(o);this.create=function(){var e=Math.round(Math.random()*(i.length-1));t=i[e],this.position=[[],[]].map(function(e,t){return Math.round(Math.random()*(gameProps.tiles[t]-1))})},this.update=function(){},this.draw=function(){e.ctx.fillStyle=t.color,e.ctx.beginPath(),e.ctx.arc(r.position[0]*e.tileSize+e.tileSize/2,r.position[1]*e.tileSize+e.tileSize/2,e.tileSize/2,0,2*Math.PI),e.ctx.closePath(),e.ctx.fill()}}function Game(t){var r;Object.defineProperty(this,"tileSize",{set:function(e){if(!+e)return console.error("Invalid value");r=Math.floor(+e),t.width=this.tileSize*gameProps.tiles[0],t.height=this.tileSize*gameProps.tiles[1]},get:function(){return r}}),Object.defineProperty(this,"ctx",{value:t.getContext("2d"),writable:!1}),this.players=[],this.foods=[],this.engine=new Engine(this),this.engine.add(this),this.rules=new gameRules(this),this.addPlayers(),this.addFoods(),this.newGame(),this.resizeCanvas(),this.engine.run()}Game.prototype.newGame=function(){this.for("foods",function(e){e.create()}),this.for("players",function(e){e.newBody()})},Game.prototype.for=function(e,t){for(var r=this[e].length-1;0<=r;r--)t(this[e][r],r)},Game.prototype.addPlayers=function(){var e=new Snake(this,this.players.length);this.players.push(e),this.players.length<gameProps.snakes.players.length&&this.addPlayers()},Game.prototype.addFoods=function(){var e=new Food(this);this.engine.add(e),this.foods.push(e),this.foods.length<gameProps.foods.qnt&&this.addFoods()};var gameProps={tiles:[64,36],snakes:{speed:15,initialSize:10,bodyStart:[7,4,"left"],initialDirection:"right",reverse:!(Game.prototype.resizeCanvas=function(){var t=this,e=function(){var r=[window.innerWidth,window.innerHeight],e=[0,0].map(function(e,t){return r[t]/gameProps.tiles[t]});t.tileSize=e[e[0]>e[1]?1:0]};e(),window.addEventListener("resize",e)}),players:[{color:"#000000",bodyStart:[8,4,"up"],keyMap:{left:"ArrowLeft",right:"ArrowRight",up:"ArrowUp",down:"ArrowDown"}},{color:"#ff0000",bodyStart:[6,6,"left"],keyMap:{left:"a",right:"d",up:"w",down:"s"}},{color:"#00ff00",bodyStart:[7,8,"left"],keyMap:{left:"j",right:"l",up:"i",down:"k"}}]},foods:{qnt:1,types:{normal:{chance:5,color:"#FFE400"},freezer:{chance:0,color:"#008F30"},superSpeed:{chance:0,color:"#008F30"}}}};function gameRules(r){r.engine.add(this);this.update=function(){r.for("players",function(i,n){if(!i.killed){for(var o=i.head,e=i.body.length-1;0<=e;e--)if(0<e&&i.body[e].isEqual(o))return i.collided=!0;!i.collided&&r.for("players",function(e,t){if(n!=t&&!e.killed)for(var r=e.body.length-1;0<=r;r--)if(e.body[r].isEqual(o))return i.collided=!0})}}),r.for("players",function(e){return e.killed=e.collided}),r.for("foods",function(t){r.for("players",function(e){e.head.isEqual(t.position)&&(e.increase++,t.create())})})}}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}function Snake(t,e){var n=this;this.id=e,this.body=[],this.increase=0,this.collided=!1,this.killed=!1,this.playerProps=gameProps.snakes.players[e];var o={left:[-1,0],right:[1,0],up:[0,-1],down:[0,1]},a=this.playerProps.initialDirection||gameProps.snakes.initialDirection;Object.defineProperty(this,"direction",{get:function(){return a},set:function(e){var t=Object.keys(o),r=a,i=n.playerProps.reverse||gameProps.snakes.reverse;t.includes(e)&&(a=e),l().isEqual(n.body[1])&&(i?(a=n.tailDirection,n.body.reverse()):a=r)}}),Object.defineProperties(this,{head:{get:function(){return n.body[0]}},tail:{get:function(){return n.body[n.body.length-1]}},tailDirection:{get:function(){var e=n.body[n.body.length-2],t=n.tail;return t[0]>e[0]?"right":t[0]<e[0]?"left":t[1]>e[1]?"down":t[1]<e[1]?"up":void 0}}}),t.engine.add(this),snakeControls(this,this.playerProps.keyMap);var s=0,l=function(){var e=o[n.direction],t=Math.abs(e[1]),r=[].concat(_toConsumableArray(n.body[0]));return r[t]+=e[t],r[t]>=gameProps.tiles[t]?r[t]=0:r[t]<0&&(r[t]=gameProps.tiles[t]-1),r};this.update=function(e){var t,r,i;n.body.length&&!n.killed&&(t=e,r=n.playerProps.speed||gameProps.snakes.speed,~~(i=t*r)<=~~s||(s=i!=r?i:0,n.increase<1?n.body.pop():n.increase--,n.body.splice(0,0,l())))},this.draw=function(){n.killed||(t.ctx.fillStyle=n.playerProps.color,n.body.forEach(function(e){t.ctx.fillRect(e[0]*t.tileSize,e[1]*t.tileSize,t.tileSize,t.tileSize)}))}}function snakeControls(r,e){var i=[Object.keys(e),Object.values(e)];window.addEventListener("keydown",function(e){var t=i[1].indexOf(e.key);-1<t&&(r.direction=i[0][t])})}function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}Snake.prototype.newBody=function(){var e=this.playerProps.bodyStart||gameProps.snakes.bodyStart,t=[e[0],e[1]],r=e[2];this.body=[t];for(var i=this.playerProps.initialSize||gameProps.snakes.initialSize,n=1;n<i;n++){this.body.push([]);var o=t[0],a=t[1];switch(r){case"right":case"left":o="right"==r?t[0]+n:t[0]-n;break;case"up":case"down":a="down"==r?t[1]+n:t[1]-n}this.body[n].push(o),this.body[n].push(a)}},Array.prototype.isEqual=function(e){return JSON.stringify(this)===JSON.stringify(e)},Array.prototype.sumWith=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];t=[this].concat(_toConsumableArray(t)).sort(function(e,t){return t.length-e.length});for(var i=[].concat(_toConsumableArray(t[0])),n=1,o=t.length;n<o;n++)for(var a=t[n],s=0,l=a.length;s<l;s++){var d=a[s];i[s]+=d}return i};
//# sourceMappingURL=snakeGame.js.map

{"version":3,"sources":["activate.js","fetch.js","install.js"],"names":["self","addEventListener","e","waitUntil","caches","keys","then","Promise","all","filter","key","indexOf","CACHE_NAME","map","delete","respondWith","match","request","cacheResponse","cachedResponse","fetch","event","catch","error","console","log","open","cache","matching","status","reject","addAll"],"mappings":"aAAAA,KAAKC,iBAAiB,WAAY,SAAAC,GAAA,OAAKA,EAAEC,UACrCC,OAAOC,OAAOC,KAAK,SAAAD,GAAA,OAAQE,QAAQC,IAC/BH,EAAKI,OAAO,SAAAC,GAAA,OAAmC,IAA5BA,EAAIC,QAAQC,cAC1BC,IAAI,SAAAH,GAAA,OAAON,OAAOU,OAAOJ,WCHtCV,KAAKC,iBAAiB,QAAS,SAAAC,GAAA,OAAKA,EAAEa,YAClCX,OAAOY,MAAMd,EAAEe,SAASX,KAAK,SAAAY,GAAA,OAAiBC,gBAAkBC,MAAMlB,EAAEe,cAG5EjB,KAAKC,iBAAiB,QAAS,SAASoB,GACpCA,EAAMN,YACJK,MAAMC,EAAMJ,SAASK,MAAM,SAASC,GAQlC,OAPAC,QAAQC,IACN,wEACEF,GAKGnB,OACJsB,KACC,4EAEDpB,KAAK,SAASqB,GACb,OAAOA,EAAMX,MAAMK,EAAMJ,SAASX,KAAK,SAASsB,GAK9C,OAHGA,GAA+B,KAAnBA,EAASC,OAElBD,EADArB,QAAQuB,OAAO,qBCtBnC,IAAMlB,WAAa,YAEnBZ,KAAKC,iBAAiB,UAAW,SAAAC,GAC7BA,EAAEC,UACEC,OAAOsB,KAAKd,YAAYN,KAAK,SAAAqB,GAAA,OAASA,EAAMI,OAAO,CAC/C,IACA,cACA","file":"serviceWorker.js","sourcesContent":["self.addEventListener('activate', e => e.waitUntil(\r\n    caches.keys().then(keys => Promise.all(\r\n        keys.filter(key => key.indexOf(CACHE_NAME) !== 0)\r\n            .map(key => caches.delete(key))\r\n    ))\r\n));","self.addEventListener('fetch', e => e.respondWith(\r\n    caches.match(e.request).then(cacheResponse => cachedResponse || fetch(e.request))\r\n));\r\n\r\nself.addEventListener(\"fetch\", function(event) {\r\n    event.respondWith(\r\n      fetch(event.request).catch(function(error) {\r\n        console.log(\r\n          \"[Service Worker] Network request Failed. Serving content from cache: \" +\r\n            error\r\n        );\r\n        //Check to see if you have it in the cache\r\n        //Return response\r\n        //If not in the cache, then return error page\r\n        return caches\r\n          .open(\r\n            \"sw-precache-v3-sw-precache-webpack-plugin-https://silent-things.surge.sh\"\r\n          )\r\n          .then(function(cache) {\r\n            return cache.match(event.request).then(function(matching) {\r\n              var report =\r\n                !matching || matching.status == 404\r\n                  ? Promise.reject(\"no-match\")\r\n                  : matching;\r\n              return report;\r\n            });\r\n          });\r\n      })\r\n    );\r\n  });","const CACHE_NAME = 'static-v2';\r\n\r\nself.addEventListener('install', e => {\r\n    e.waitUntil(\r\n        caches.open(CACHE_NAME).then(cache => cache.addAll([\r\n            '/',\r\n            '/index.html',\r\n            '/js/snakeGame.js'\r\n        ]))\r\n    )\r\n});"]}